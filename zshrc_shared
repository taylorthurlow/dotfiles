source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source $HOME/.oh-my-zsh/custom/plugins/zsh-histdb/sqlite-history.zsh
autoload -Uz add-zsh-hook
add-zsh-hook precmd histdb-update-outcome

# Up a directory with "up"
up() {
	cd $(eval printf '../'%.0s {1..$1})
}

# Makedir and cd into it
mkcd() {
	if [ $# != 1 ]; then
		echo "Usage: mkcd <dir>"
	else
		mkdir -p $1 && cd $1
	fi
}

# Makedir and take ownership
mkchown() {
	if [ $# != 1 ]; then
		echo "Usage: mkchown <dir>"
	else
		sudo mkdir -p $1 && sudo chown $(whoami):$(whoami) $1
	fi
}

# Delete local and remote branches
function git-nuke {
	git branch -D $1 && git push origin :$1
}

# make git tab completion faster
__git_files () {
	_wanted files expl 'local files' _files
}

# easy kill processes with fzf
kill_process() {
	local pid=$(ps -ef | sed 1d | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[kill:process]'" | awk '{print $2}')

	if [ "x$pid" != "x" ]
	then
		echo $pid | xargs kill -${1:-9}
		kp
	fi
}

# brew install with fzf
brew_install_fzf() {
	local inst=$(brew search | eval "fzf ${FZF_DEFAULT_OPTS} -m --header='[brew:install]'")

	if [[ $inst ]]; then
		for prog in $(echo $inst)
		do brew install $prog
		done
	fi
}

export NNN_TMPFILE="/tmp/nnn"
n() {
	nnn "$@"
	if [[ -f $NNN_TMPFILE ]]; then
		. $NNN_TMPFILE
		rm -f $NNN_TMPFILE
	fi
}

unsetopt AUTOcd
setopt noflowcontrol

export GPG_TTY=$(tty)
if [[ -n "$SSH_CONNECTION" ]]; then
	export PINENTRY_USER_DATA="USE_CURSES=1"
fi

[ "$(command -v nvim)" ] && export EDITOR="$(which nvim)"
[ "$(command -v bat)" ] && alias cat="bat"
[ "$(command -v hub)" ] && alias git="hub"
[ "$(command -v hub)" ] && alias gci="hub ci-status -v"
[ "$(command -v exa)" ] && alias ls="exa"
[ "$(command -v nvim)" ] && alias vim="nvim"
[ "$(command -v thefuck)" ] && eval $(thefuck --alias)

alias kp="kill_process"
alias bip="brew_install_fzf"
alias dc="docker-compose"
alias gst="git status -s"
alias bid="bundle install --path=vendor --jobs=$(sysctl -n hw.ncpu) --binstubs=.bundle/bin"
alias glog="thicket --color-prefixes | less"
alias gloga="thicket --color-prefixes --all | less"
alias wglog="watch --color -n 1 thicket --color-prefixes -n 200"
alias wgloga="watch --color -n 1 thicket --color-prefixes -n 200 --all"

if [ "$(command -v kitty)" ]; then
	alias aedirnlan="kitty +kitten ssh taylor@aedirn.local"
	alias aedirnwan="kitty +kitten ssh taylor@home.thurlow.io"
	alias cintralan="kitty +kitten ssh taylor@cintra.local"
	alias cintrawan="kitty +kitten ssh taylor@home.thurlow.io -t ssh taylor@cintra.local"
	alias whatbox="kitty +kitten ssh frizkie@apollo.whatbox.ca"
else
	alias aedirnlan="ssh taylor@aedirn.local"
	alias aedirnwan="ssh taylor@home.thurlow.io"
	alias cintralan="ssh taylor@cintra.local"
	alias cintrawan="ssh taylor@home.thurlow.io -t ssh taylor@cintra.local"
	alias feral="ssh frizkie@selene.feralhosting.com"
	alias whatbox="ssh frizkie@apollo.whatbox.ca"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

get_ruby() {
	$(which ruby) <<RUBY
		$:.unshift File.join(Dir.home, ".dotfiles", "ruby_scripts")
		ARGV = ["$2"]
		$1
RUBY
}

# We want PATH modification to happen even in non-interactive shells, so we'll
# include all the PATH modification in ~/.zprofile. Do not add PATH modification
# to this file.
